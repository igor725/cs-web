{"version":3,"sources":["components/Navbar.js","components/Layout.js","pages/cfgeditor.js","components/PlayersList.js","components/WebSocketConnection.js","pages/home.js","pages/index.js","App.js","reportWebVitals.js","index.js"],"names":["prev_colored","Navbar","props","DARKMODE_STATE","window","localStorage","getItem","_useState","useState","_useState2","Object","slicedToArray","isDarkMode","setIsDarkMode","setItem","navigate","useNavigate","currentLocation","useLocation","pathname","useEffect","classList","remove","els","document","querySelectorAll","concat","undefined","add","react_default","a","createElement","className","style","cursor","onClick","useCallback","replace","dist","to","index_es","onChange","setTheme","size","Layout","_ref","children","isUpdate","setUpdate","Fragment","components_Navbar","key","CFGeditor","PlayersList","player","width","WebSocket","_ReadyState$CONNECTIN","socketUrl","_useWebSocket","useWebSocket","sendMessage","lastMessage","readyState","defineProperty","ReadyState","CONNECTING","OPEN","CLOSING","CLOSED","UNINSTANTIATED","Home","WSC","_WSC","components_PlayersList","Pages","components_Layout","react_router_dist","exact","path","element","pages_home","cfgeditor","App","pages","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.e4c9d72f.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\r\nimport './styles/Navbar.css'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { DarkModeToggle } from \"react-dark-mode-toggle-2\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nlet prev_colored\r\nconst Navbar = props => {\r\n    const DARKMODE_STATE = (window.localStorage.getItem('DARKMODE_STATE') === 'true') || false\r\n    const [isDarkMode, setIsDarkMode] = useState(DARKMODE_STATE);\r\n\r\n    window.localStorage.setItem('DARKMODE_STATE', isDarkMode);\r\n\r\n    const navigate = useNavigate()\r\n    const currentLocation = useLocation().pathname;\r\n\r\n    useEffect(() => {\r\n        if (prev_colored) {\r\n            prev_colored.classList.remove(\"red\");\r\n        }\r\n        var els = document.querySelectorAll(`a[href='${currentLocation}']`)[0];\r\n        if (els !== undefined) {\r\n            els.classList.add(\"red\");\r\n            prev_colored = els;\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <h3 style={{ cursor: \"pointer\" }} onClick={useCallback(() => navigate('/', { replace: true }), [navigate])}>CServer Webadmin</h3>\r\n            <div className=\"buttons\">\r\n                <Link to='/'> Home </Link>\r\n                <Link to='/cfgeditor'> CFG Editor </Link>\r\n                <Link to='/luaconsole'> Lua Console </Link>\r\n                <Link to='/pluginmanager'> Plugin Manager</Link>\r\n                <DarkModeToggle\r\n                    onChange={() => {setIsDarkMode(!isDarkMode); props.setTheme()}}\r\n                    isDarkMode={isDarkMode} \r\n\r\n                    className='night_btn'\r\n                    size={50}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, { useState } from 'react';\r\n\r\nimport Navbar from './Navbar';\r\nconst Layout = ({ children }) => {\r\n    const [isUpdate, setUpdate] = useState(0)\r\n    function setTheme() {\r\n        setUpdate(isUpdate + 1)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"layout-container\">\r\n                <Navbar setTheme={setTheme} />\r\n            </div>\r\n            <div className={isUpdate > 0 ? !(window.localStorage.getItem('DARKMODE_STATE') === 'true') || false ? \"darkmode\" : \"lightmode\": (window.localStorage.getItem('DARKMODE_STATE') === 'true') || false ? \"darkmode\" : \"lightmode\"} key={isUpdate}>\r\n                {children}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Layout","import React from 'react';\r\n\r\nconst CFGeditor = () => {\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <p> penis </p>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default CFGeditor","import React, {useEffect, useState} from 'react';\r\nimport './styles/PlayersList.css'\r\n\r\nconst PlayersList = () => {\r\n    const player = <li><b>Player</b> in world <b>WORLD</b></li>\r\n    return(\r\n        <div className='playersOnline'>\r\n            <h3>Current online</h3>\r\n            <hr style={{width: \"100%\"}}/>\r\n            <ul>\r\n                {player}\r\n                <li><b>Player123123123123123</b> in world <b>WORLD</b></li>\r\n                {player}\r\n                {player}\r\n                {player}\r\n                {player}\r\n                {player}\r\n                {player}\r\n                {player}\r\n                {player}\r\n                {player}\r\n                {player}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default PlayersList","import React, { useState } from 'react';\r\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\r\n\r\nexport const WebSocket = () => {\r\n    const [socketUrl, setSocketUrl] = useState('ws://igvx.ru:8880/');\r\n    const { sendMessage, lastMessage, readyState } = useWebSocket(socketUrl);\r\n\r\n    // const handleClickSendMessage = useCallback(() => sendMessage('Hello'), []);\r\n\r\n    const connectionStatus = {\r\n        [ReadyState.CONNECTING]: 'Connecting',\r\n        [ReadyState.OPEN]: 'Open',\r\n        [ReadyState.CLOSING]: 'Closing',\r\n        [ReadyState.CLOSED]: 'Closed',\r\n        [ReadyState.UNINSTANTIATED]: 'Uninstantiated',\r\n    }[readyState];\r\n    return ([lastMessage, sendMessage])\r\n}\r\nexport default WebSocket\r\n\r\n","import React from 'react';\r\nimport './styles/home.css'\r\nimport PlayersList from '../components/PlayersList';\r\nimport WebSocket from '../components/WebSocketConnection';\r\n\r\nconst Home = () => {\r\n    const WSC = WebSocket();\r\n    let [lastMessage, sendMessage] = WSC;\r\n\r\n    return(\r\n        <div className='homeMenu'>\r\n            <PlayersList />\r\n        </div>\r\n            \r\n    )\r\n}\r\nexport default Home","import React from 'react'\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\r\n\r\nimport Layout from '../components/Layout'\r\nimport CFGeditor from './cfgeditor'\r\n\r\nimport Home from './home'\r\n\r\nconst Pages = () => {\r\n    return(\r\n        <BrowserRouter>\r\n            <Layout>\r\n                <Routes>\r\n                    <Route exact path=\"/\" element={<Home />}/>\r\n                    <Route exact path=\"/cfgeditor\" element={<CFGeditor />}/>\r\n                    {/* <Route path=\"/play\" element={<Play />}/>\r\n                    <Route path=\"/experimental\" element={<Experimental />}/>\r\n                    <Route path=\"/files\" element={<Files />}/> */}\r\n                </Routes>\r\n            </Layout>\r\n        </BrowserRouter>\r\n    );\r\n}\r\nexport default Pages","import './App.css';\nimport Pages from './pages';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <Pages />\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}