{"version":3,"sources":["components/Navbar.js","components/Layout.js","pages/cfgeditor.js","pages/home.js","pages/index.js","App.js","reportWebVitals.js","index.js"],"names":["prev_elem","changeColor","e","elem","target","classList","add","remove","Navbar","_useState","useState","_useState2","Object","slicedToArray","isDarkMode","setIsDarkMode","react_default","a","createElement","className","style","cursor","onClick","dist","to","dist_default","onChange","checked","size","Layout","_ref","children","Fragment","components_Navbar","CFGeditor","Home","Pages","components_Layout","react_router_dist","exact","path","element","home","cfgeditor","App","pages","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"uMAKIA,yFACJ,SAASC,EAAYC,GACjB,IAAIC,EAAOD,EAAEE,OACbD,EAAKE,UAAUC,IAAI,OACnBN,GAAaA,IAAcG,GAAQH,EAAUK,UAAUE,OAAO,OAC9DP,EAAYG,EAGhB,IAsBeK,EAtBA,WAAM,IAAAC,EACmBC,mBAAS,kBAAM,IAAMC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAlDK,EAAUH,EAAA,GAAEI,EAAaJ,EAAA,GAChC,OACIK,EAAAC,EAAAC,cAAA,OAAKC,UAAY,UACbH,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAACC,OAAQ,YAAW,oBAC/BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUG,QAASrB,GAC9Be,EAAAC,EAAAC,cAACK,EAAA,EAAI,CAACC,GAAG,KAAG,UACZR,EAAAC,EAAAC,cAACK,EAAA,EAAI,CAACC,GAAG,cAAY,gBACrBR,EAAAC,EAAAC,cAACK,EAAA,EAAI,CAACC,GAAG,eAAa,iBACtBR,EAAAC,EAAAC,cAACK,EAAA,EAAI,CAACC,GAAG,kBAAgB,mBACzBR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACO,EAAAR,EAAc,CACXS,SAAUX,EACVY,QAASb,EACTc,KAAM,SCdfC,EAVA,SAAHC,GAAqB,IAAfC,EAAQD,EAARC,SACd,OACIf,EAAAC,EAAAC,cAACF,EAAAC,EAAMe,SAAQ,KACXhB,EAAAC,EAAAC,cAAA,OAAKC,UAAY,oBACbH,EAAAC,EAAAC,cAACe,EAAM,OAETF,ICCCG,EARG,WAEd,OACIlB,EAAAC,EAAAC,cAACF,EAAAC,EAAMe,SAAQ,KACXhB,EAAAC,EAAAC,cAAA,sBCIGiB,EARF,WAET,OACInB,EAAAC,EAAAC,cAACF,EAAAC,EAAMe,SAAQ,KACXhB,EAAAC,EAAAC,cAAA,wBCiBGkB,EAfD,WACV,OACIpB,EAAAC,EAAAC,cAACK,EAAA,EAAa,KACVP,EAAAC,EAAAC,cAACmB,EAAM,KACHrB,EAAAC,EAAAC,cAACoB,EAAA,EAAM,KACHtB,EAAAC,EAAAC,cAACoB,EAAA,EAAK,CAACC,OAAK,EAACC,KAAK,IAAIC,QAASzB,EAAAC,EAAAC,cAACwB,EAAI,QACpC1B,EAAAC,EAAAC,cAACoB,EAAA,EAAK,CAACC,OAAK,EAACC,KAAK,aAAaC,QAASzB,EAAAC,EAAAC,cAACyB,EAAS,YCJvDC,MANf,WACE,OACE5B,EAAAC,EAAAC,cAAC2B,EAAK,OCMKC,SAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAA/C,EAAA,GAAAgD,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAApB,GAAiD,IAA9CsB,EAAMtB,EAANsB,OAAQC,EAAMvB,EAANuB,OAAQC,EAAMxB,EAANwB,OAAQC,EAAMzB,EAANyB,OAAQC,EAAO1B,EAAP0B,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,OCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH7C,EAAAC,EAAAC,cAACF,EAAAC,EAAM6C,WAAU,KACf9C,EAAAC,EAAAC,cAAC6C,EAAG,QAORjB","file":"static/js/main.409e0b90.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport './styles/Navbar.css'\r\nimport { Link } from 'react-router-dom'\r\nimport DarkModeToggle from \"react-dark-mode-toggle\";\r\n\r\nlet prev_elem;\r\nfunction changeColor(e){\r\n    let elem = e.target\r\n    elem.classList.add(\"red\");\r\n    prev_elem && prev_elem !== elem && prev_elem.classList.remove(\"red\");\r\n    prev_elem = elem;\r\n}\r\n\r\nconst Navbar = () => {\r\n    const [isDarkMode, setIsDarkMode] = useState(() => false);\r\n    return(\r\n        <div className = \"navbar\">\r\n            <h3 style={{cursor: \"default\"}}>CServer Webadmin</h3>\r\n            <div className=\"buttons\" onClick={changeColor}>\r\n                <Link to='/'> Home </Link>\r\n                <Link to='/cfgeditor'> CFG Editor </Link>\r\n                <Link to='/luaconsole'> Lua Console </Link>\r\n                <Link to='/pluginmanager'> Plugin Manager</Link>\r\n                <div className='night_btn'>\r\n                    <DarkModeToggle\r\n                        onChange={setIsDarkMode}\r\n                        checked={isDarkMode}\r\n                        size={50}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\nimport Navbar from './Navbar';\r\n\r\nconst Layout = ({ children }) => {\r\n    return(\r\n        <React.Fragment>\r\n            <div className = \"layout-container\">\r\n                <Navbar />\r\n            </div>\r\n            { children }\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Layout","import React from 'react';\r\n\r\nconst CFGeditor = () => {\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <p> penis </p>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default CFGeditor","import React from 'react';\r\n\r\nconst Home = () => {\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <p> playboi </p>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default Home","import React from 'react'\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\r\n\r\nimport Layout from '../components/Layout'\r\nimport CFGeditor from './cfgeditor'\r\n\r\nimport Home from './home'\r\n\r\nconst Pages = () => {\r\n    return(\r\n        <BrowserRouter>\r\n            <Layout>\r\n                <Routes>\r\n                    <Route exact path=\"/\" element={<Home />}/>\r\n                    <Route exact path=\"/cfgeditor\" element={<CFGeditor />}/>\r\n                    {/* <Route path=\"/play\" element={<Play />}/>\r\n                    <Route path=\"/experimental\" element={<Experimental />}/>\r\n                    <Route path=\"/files\" element={<Files />}/> */}\r\n                </Routes>\r\n            </Layout>\r\n        </BrowserRouter>\r\n    );\r\n}\r\nexport default Pages","import './App.css';\nimport Pages from './pages';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <Pages />\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}