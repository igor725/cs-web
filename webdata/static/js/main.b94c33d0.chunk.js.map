{"version":3,"sources":["components/Navbar.js","components/PlayersList.js","components/Layout.js","pages/cfgeditor.js","components/PlayerList/PlayerDropdown.js","components/CWAP/WebSocketConnection.js","components/CWAP/CWAP.js","pages/home.js","pages/index.js","App.js","reportWebVitals.js","index.js"],"names":["prev_colored","prev_player","Navbar","props","DARKMODE_STATE","window","localStorage","getItem","_useState","useState","_useState2","Object","slicedToArray","isDarkMode","setIsDarkMode","setItem","navigate","useNavigate","currentLocation","useLocation","pathname","useEffect","classList","remove","els","document","querySelectorAll","concat","undefined","add","react_default","a","createElement","className","style","cursor","onClick","useCallback","replace","dist","to","index_es","onChange","setTheme","size","Layout","_ref","children","isUpdate","setUpdate","Fragment","components_Navbar","key","CFGeditor","PlayerDropdown","playerName","playerWorld","world","isAdmin","display","showMenu","color","name","assign","disabled","e","playerEl","currentTarget","parentElement","childNodes","toggle","onclick","event","target","matches","i","dropdowns","getElementsByClassName","length","openDropdown","contains","left","clientX","top","clientY","PlayersList","getElementById","onscroll","id","PlayerList_PlayerDropdown","WebSocket","_ReadyState$CONNECTIN","location","host","socketUrl","_useWebSocket","useWebSocket","sendMessage","lastMessage","readyState","connectionStatus","defineProperty","ReadyState","CONNECTING","OPEN","CLOSING","CLOSED","UNINSTANTIATED","console","log","state_paths","/home","/configeditor","/console","/pluginmanager","Home","cwap","WSC","_WSC","password","hash","MD5","generate","reason","seconds","ban_props","path","CWAP","_cwap","sendAuth","banPlayer","opPlayer","switchState","components_PlayersList","Pages","components_Layout","react_router_dist","exact","element","pages_home","cfgeditor","App","pages","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b94c33d0.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\r\nimport './styles/Navbar.css'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { DarkModeToggle } from \"react-dark-mode-toggle-2\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nlet prev_colored\r\nconst Navbar = props => {\r\n    const DARKMODE_STATE = (window.localStorage.getItem('DARKMODE_STATE') === 'true') || false\r\n    const [isDarkMode, setIsDarkMode] = useState(DARKMODE_STATE);\r\n\r\n    window.localStorage.setItem('DARKMODE_STATE', isDarkMode);\r\n\r\n    const navigate = useNavigate()\r\n    const currentLocation = useLocation().pathname;\r\n\r\n    useEffect(() => {\r\n        if (prev_colored) {\r\n            prev_colored.classList.remove(\"red\");\r\n        }\r\n        var els = document.querySelectorAll(`a[href='${currentLocation}']`)[0];\r\n        if (els !== undefined) {\r\n            els.classList.add(\"red\");\r\n            prev_colored = els;\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <h3 style={{ cursor: \"pointer\" }} onClick={useCallback(() => navigate('/', { replace: true }), [navigate])}>CServer Webadmin</h3>\r\n            <div className=\"buttons\">\r\n                <Link to='/'> Home </Link>\r\n                <Link to='/console'> Console </Link>\r\n                <Link to='/configeditor'> Config Editor </Link>\r\n                <Link to='/pluginmanager'> Plugin Manager</Link>\r\n                <DarkModeToggle\r\n                    onChange={() => {setIsDarkMode(!isDarkMode); props.setTheme()}}\r\n                    isDarkMode={isDarkMode} \r\n\r\n                    className='night_btn'\r\n                    size={50}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, {useEffect, useState} from 'react';\r\nimport PlayerDropdown from './PlayerList/PlayerDropdown';\r\nimport './styles/PlayersList.css'\r\n\r\nlet prev_player;\r\nwindow.onclick = function(event) {\r\n    if (!event.target.matches('.dropbtn')){\r\n        var dropdowns = document.getElementsByClassName(\"playerMenu\");\r\n        var i;\r\n        for (i = 0; i < dropdowns.length; i++) {\r\n            var openDropdown = dropdowns[i];\r\n            if (openDropdown.classList.contains('show')) {\r\n                openDropdown.classList.remove('show');\r\n            }\r\n        }\r\n    }{\r\n        if (prev_player){\r\n            prev_player.style.left = event.clientX + \"px\"\r\n            prev_player.style.top = event.clientY + \"px\"\r\n        }\r\n    }\r\n}\r\nfunction showMenu(e){\r\n    let playerEl = e.currentTarget.parentElement.childNodes[1]\r\n    if ((playerEl !== prev_player) && prev_player){\r\n        prev_player.classList.remove(\"show\")\r\n    }\r\n    playerEl.classList.toggle(\"show\");\r\n    prev_player = playerEl\r\n}\r\n\r\nconst PlayersList = () => {\r\n    useEffect(()=>{\r\n        const listElement = document.getElementById(\"plist\")\r\n        listElement.onscroll = (e) =>{\r\n            prev_player && prev_player.classList.remove(\"show\")\r\n        }\r\n    })\r\n    const player = <li><b>Player</b> in world <b>WORLD</b></li>\r\n    return(\r\n        <div className='playersOnline'>\r\n            <div>\r\n                <h3>Current online</h3>\r\n                <hr/>\r\n            </div>\r\n            <ul id=\"plist\">\r\n                <PlayerDropdown showMenu={showMenu} world=\"Tets\">KEK</PlayerDropdown>\r\n                {/* <PlayerDropdown showMenu={showMenu}>KEK1</PlayerDropdown>\r\n                <PlayerDropdown showMenu={showMenu}>KEK2</PlayerDropdown>\r\n                <PlayerDropdown showMenu={showMenu}>KEK3</PlayerDropdown>\r\n                <PlayerDropdown showMenu={showMenu}>KEK4</PlayerDropdown>\r\n                <PlayerDropdown showMenu={showMenu}>KEK5</PlayerDropdown>\r\n                <PlayerDropdown showMenu={showMenu}>KEK6</PlayerDropdown>\r\n                <PlayerDropdown showMenu={showMenu}>KEK7</PlayerDropdown>\r\n                <PlayerDropdown showMenu={showMenu}>KEK8</PlayerDropdown>\r\n                <PlayerDropdown showMenu={showMenu}>KEK9</PlayerDropdown>\r\n                <PlayerDropdown showMenu={showMenu}>KEK0</PlayerDropdown>\r\n                <PlayerDropdown showMenu={showMenu}>KEK00</PlayerDropdown>\r\n                <PlayerDropdown showMenu={showMenu}>KEK01</PlayerDropdown>\r\n                <PlayerDropdown showMenu={showMenu}>KEK02</PlayerDropdown>\r\n                <PlayerDropdown showMenu={showMenu}>KEK03</PlayerDropdown>\r\n                <PlayerDropdown showMenu={showMenu}>KEK04</PlayerDropdown>\r\n                <PlayerDropdown showMenu={showMenu}>KEK05</PlayerDropdown> */}\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default PlayersList","import React, { useState } from 'react';\r\nimport \"./styles/Layout.css\"\r\nimport Navbar from './Navbar';\r\n\r\nconst Layout = ({ children }) => {\r\n    const [isUpdate, setUpdate] = useState(0)\r\n    function setTheme() {\r\n        setUpdate(isUpdate + 1)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"layout-container\">\r\n                <Navbar setTheme={setTheme} />\r\n            </div>\r\n            <div className={isUpdate > 0 ? !(window.localStorage.getItem('DARKMODE_STATE') === 'true') || false ? \"darkmode\" : \"lightmode\" : (window.localStorage.getItem('DARKMODE_STATE') === 'true') || false ? \"darkmode\" : \"lightmode\"} key={isUpdate}>\r\n                {children}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Layout","import React from 'react';\r\n\r\nconst CFGeditor = () => {\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <p> penis </p>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default CFGeditor","import React from 'react';\r\nimport './styles/PlayerDropdown.css'\r\n\r\n\r\nconst PlayerDropdown = props => {\r\n    const playerName = props.children;\r\n    const playerWorld = props.world\r\n    const isAdmin = props.isAdmin || false\r\n    return(\r\n        <div className=\"playerDropdown\">\r\n            <li>\r\n                <p style={{display: 'contents'}} \r\n                onClick={props.showMenu}>\r\n                        <b style={{cursor: \"pointer\", color: isAdmin ? \"red\":\"\"}} className=\"dropbtn\" name={playerName}>{playerName}</b> in world <b>{playerWorld}</b>\r\n                </p>\r\n                <div className=\"playerMenu\">\r\n                    <button className='ban' style={{cursor: isAdmin ? \"\":\"pointer\"}} {...isAdmin && {disabled: true}}> Ban </button>\r\n                    <button className='kick' style={{cursor: isAdmin ? \"\":\"pointer\"}} {...isAdmin && {disabled: true}}> Kick </button>\r\n                </div>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\nexport default PlayerDropdown","import React, { useState } from 'react';\r\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\r\n\r\nexport const WebSocket = () => {\r\n    const [socketUrl, setSocketUrl] = useState(`ws://${window.location.host}/ws`);\r\n    const { sendMessage, lastMessage, readyState } = useWebSocket(socketUrl);\r\n\r\n    const connectionStatus = {\r\n        [ReadyState.CONNECTING]: 'Connecting',\r\n        [ReadyState.OPEN]: 'Open',\r\n        [ReadyState.CLOSING]: 'Closing',\r\n        [ReadyState.CLOSED]: 'Closed',\r\n        [ReadyState.UNINSTANTIATED]: 'Uninstantiated',\r\n    }[readyState];\r\n    console.log(connectionStatus)\r\n    return ([socketUrl, lastMessage, sendMessage])\r\n}\r\nexport default WebSocket","import React from 'react';\r\nimport { MD5 } from \"md5-js-tools\";\r\nimport WebSocket from './WebSocketConnection';\r\n\r\nconst state_paths = {\r\n    \"/home\":            \"H\", \r\n    \"/configeditor\":    \"C\", \r\n    \"/console\":         \"R\", \r\n    \"/pluginmanager\":   \"E\"\r\n}\r\n// ПРОБЕЛ !!! \\x00\r\nexport function CWAP(){\r\n    const WSC = WebSocket();\r\n    let [sockerUrl, lastMessage, sendMessage] = WSC;\r\n\r\n    function getAnswer(){\r\n        return lastMessage\r\n    }\r\n\r\n    function sendAuth(password){\r\n        const hash = MD5.generate(password);\r\n        sendMessage(`A${hash}\\x00`)\r\n    }\r\n    function banPlayer(name, reason, seconds){\r\n        const ban_props = `${name}\\x00${reason}\\x00${seconds}`\r\n        sendMessage(`B${ban_props}\\x00`)\r\n    }\r\n    function kickPlayer(name){\r\n        sendMessage(`K${name}\\x00`)\r\n    }\r\n    function opPlayer(name){\r\n        sendMessage(`O${name}\\x001\\x00`)\r\n    }\r\n    function deopPlayer(name){\r\n        sendMessage(`O${name}\\x000\\x00`)\r\n    }\r\n    function switchState(path){\r\n        sendMessage(`S${state_paths[path]}\\x00`)\r\n    }\r\n    // return ()\r\n    return ([sendAuth, getAnswer, banPlayer, kickPlayer, opPlayer, deopPlayer, switchState])\r\n}\r\n","import React from 'react';\r\nimport './styles/home.css'\r\nimport PlayersList from '../components/PlayersList';\r\nimport {CWAP} from '../components/CWAP/CWAP';\r\n\r\nconst Home = () => {\r\n    const cwap = CWAP()\r\n    const [sendAuth, getAnswer, banPlayer, kickPlayer, opPlayer, deopPlayer, switchState] = cwap\r\n    // console.log(getAnswer())\r\n    return(\r\n        <div className='homeMenu'>\r\n            <PlayersList />\r\n            <button onClick={()=>sendAuth(\"1211\")}>SEND AUTH</button>\r\n            <button onClick={()=>opPlayer(\"AetherSmoke\")}>SEND OP</button>\r\n            <button onClick={()=>banPlayer(\"igor1\", \"loh\", \"1337228\")}>SEND KICK</button>\r\n            <button onClick={()=>switchState(\"/home\")}>SEND SWITCH STATE</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Home","import React from 'react'\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\r\n\r\nimport Layout from '../components/Layout'\r\nimport CFGeditor from './cfgeditor'\r\n\r\nimport Home from './home'\r\n\r\nconst Pages = () => {\r\n    return(\r\n        <BrowserRouter>\r\n            <Layout>\r\n                <Routes>\r\n                    <Route exact path=\"/\" element={<Home />}/>\r\n                    <Route exact path=\"/configeditor\" element={<CFGeditor />}/>\r\n                    <Route exact path=\"/console\" element={<CFGeditor />}/>\r\n                    <Route exact path=\"/pluginmanager\" element={<CFGeditor />}/>\r\n                </Routes>\r\n            </Layout>\r\n        </BrowserRouter>\r\n    );\r\n}\r\nexport default Pages","import './App.css';\nimport Pages from './pages';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <Pages />\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}